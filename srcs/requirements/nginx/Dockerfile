# Use Debian Bullseye as the base image
FROM debian:bullseye

# Install necessary packages (Nginx and any dependencies)
RUN apt-get update -y && apt-get upgrade -y
RUN apt-get install -y nginx

# Install SSL and setup the SSL certificate
RUN mkdir -p /etc/nginx/ssl
RUN apt-get install -y openssl
RUN openssl req -x509 -nodes -out /etc/nginx/ssl/inception.crt -keyout /etc/nginx/ssl/inception.key -subj "/C=SW/ST=VD/L=Lausane/O=42/OU=42/CN=pvong.42.ch/emailAddress=pvong@student.42.fr"
# =================================================
# Openssl req explanation:
# =================================================
# openssl req: certificate request and certificate generating utility ( https://www.openssl.org/docs/man1.1.1/man1/req.html)
# -x509: output a self-signed certificate instead of a certificate request
# -nodes: if this option is specified then if a private key is created it will not be encrypted (no password)
# -out: specifies the output filename to write to or standard output by default
# -keyout: specifies the output filename to write the private key to
# -subj: sets certificate subject
# /C=SW: Country
# /ST=VD: State
# /L=Lausane: Location
# /O=42: Organization
# /OU=42: Organizational Unit
# /CN=pvong.42.ch: Common Name
# =================================================

# Create necessary directories for nginx and wordpress
RUN mkdir -p /var/run/nginx /var/www/wordpress
RUN chmod -R 755 /var/www/wordpress
RUN chown -R www-data:www-data /var/www/wordpress

# Copy the conf file in conf directory to the /etc/nginx/ directory and overwrite the default configuration file
COPY conf/nginx.conf /etc/nginx/nginx.conf
# Copy the .sh file from the tools directory to the /usr/local/ directory and give it execute permission
COPY tools/start_nginx.sh /usr/local/start_nginx.sh
RUN chmod +x /usr/local/start_nginx.sh

# Expose the port 443 for SSL
EXPOSE 443

ENTRYPOINT [ "sh", "/usr/local/start_nginx.sh"]
